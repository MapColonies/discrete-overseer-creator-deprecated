openapi: 3.0.1
info:
  title: service-name
  description: basic template for map colonies service
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /layers:
    post:
      operationId: createLayer
      tags:
        - layers
      summary: start a process of creating new layer from raw data
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: './Schema/discreteIngestion/ingestionParams.yaml#/components/schemas/IngestionParams'
                - $ref: '#/components/schemas/IngestionParams'
      responses:
        200:
          description: OK
  /tasks/{jobId}/{taskId}/completed:
    post:
      operationId: completeTask
      tags:
        - tasks
      summary: update overseer on completion of tiling task
      parameters:
        - in: path
          name: jobId
          schema:
            type: string
            format: uuid
          required: true
          description: job id
        - in: path
          name: taskId
          schema:
            type: string
            format: uuid
          required: true
          description: task id
      responses:
        200:
          description: OK
  /toc:
    post:
      operationId: getToc
      tags:
        - toc
      summary: gets a toc file representing the given layer
      requestBody:
        description: A json object containing operation and toc source type
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  format: uuid
                productVersion:
                  type: string
                operation:
                  $ref: '#/components/schemas/operation'
                sourceType:
                  $ref: '#/components/schemas/sourceType'
              required:
                - productId
                - productVersion
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tocResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/tocResponse'
components:
  schemas:
    IngestionParams:
      type: object
      properties:
        metadata:
          type: object
          properties:
            productType:
              type: string
              enum:
                - Orthophoto
                - OrthophotoHistory
                - RasterMap
                - RasterAid
                - RasterVector
              description: valid product types for ingestion
    tocResponse:
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/operation'
        sourceType:
          $ref: '#/components/schemas/sourceType'
        metadata:
          type: object
          properties:
            productId:
              type: string
              format: uuid
            productVersion:
              type: string
            data:
              $ref: './Schema/updateLayerMetadata.yaml#/components/schemas/updateLayerMetadata'
    operation:
      type: string
      enum:
        - ADD
        - UPDATE
        - REMOVE
    sourceType:
      type: string
      enum:
        - DISCRETE
        - BSETMOSAIC
